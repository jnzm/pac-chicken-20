// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1tilemap":
            case "level1":return tiles.createTilemap(hex`14000d000000000000000000000000000000000000000000000000000405040101040501050405050000000000000000000400000000040404010404000104000401040000000000000000000000000000000000000000000000000000000000000000050000000000000000040104050005050504010404010400000000000000000004000404040000000000000002000000000000000003000000000000000404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . . . . . 
. . . . 2 . 2 . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . . 2 2 2 . 2 2 . . 2 . 
2 . 2 . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . . . 2 . 2 . . . . . 2 . 2 2 . 2 . . 
. . . . . . . 2 . 2 2 2 . . . . . . . . 
. . . . . . . . 2 . . . . . . . 2 2 2 2 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile3,myTiles.tile2,myTiles.tile4,myTiles.tile5], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`28000f`, img`
2222222222222222222222222222222222222222
2222222222222222222222222222222222222222
22.....................................2
2222..22222222..22222222...222222..22222
2222..2.........22222222...2.......22222
2222..22222222..22.........222222..22222
2222.........2..22.........222222..22222
2222..22222222..22222222...222222..22222
2222..22222222..22222222...222222..22222
2222...............................22222
2222...............................22222
2222222222222222222222222222222........2
2222222222222222222222222222222222222222
2222222222222222222222222222222222222222
2222222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile7,myTiles.tile9,myTiles.tile10], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "dangeroustilelevel1":
            case "tile1":return tile1;
            case "dangerouswaterlevel1":
            case "tile2":return tile2;
            case "goldcoingrasslevel1":
            case "tile4":return tile4;
            case "goincoldlevel1":
            case "tile5":return tile5;
            case "owlenemydotspawner":
            case "tile6":return tile6;
            case "yellowcornlevel1winplace":
            case "tile3":return tile3;
            case "myTile":
            case "tile7":return tile7;
            case "myTile2":
            case "tile10":return tile10;
            case "CoinFoodPac-Man":
            case "tile9":return tile9;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
